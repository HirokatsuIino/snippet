<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900|Material+Icons" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/vuetify@1.5/dist/vuetify.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.js"></script>
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/vuetify@1.5/dist/vuetify.js"></script>
  <script src="https://cdn.rawgit.com/showdownjs/showdown/1.9.0/dist/showdown.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.8.4/Sortable.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.23.2/vuedraggable.umd.min.js"></script>
  <title>Snippet App</title>
</head>
<body>
<v-app id="app">
  <v-toolbar color="red lighten-3" dark>
    <v-toolbar-title>Snippet App</v-toolbar-title>
    <v-spacer></v-spacer>
    <v-btn flat v-on:click="togglePostModal()">New Snippet</v-btn>
  </v-toolbar>
  <v-container style="height: 1000px; max-width: 2400px;">
    <v-layout>
      <v-flex xs5>
        <div style="margin:10px">
          <h2>Select Language</h2>
          <v-select v-model='language' :items="languages" label="Language" v-on:change="abstruct"></v-select>
          <h2>Snippets Shortcut</h2>
          <ul>
            <li v-for="snippet in snippetList"><span id='name' v-on:click="goElem(snippet.id)">[{{ snippet.language }}] {{ snippet.title }}</span></li>
          </ul>
        </div>
      </v-flex>
      <v-flex xs7 style='margin:10px'>
        <h2>Search Snippet</h2>
        <v-text-field v-model="searchWord" v-on:keyup="abstruct" label="Input Keyword" style='margin-top:4px'></v-text-field>

        <draggable>
        <v-card style="margin-top:10px" v-for="snippet in snippetList">
          <v-card-title primary-title>
            <a v-bind:id='snippet.id'></a>
            <h3 class="headline"> {{ snippet.title }} </h3>
          </v-card-title>
          <div style="margin: 10px 20px;">
            <div v-html='showdown.makeHtml(snippet.contents)'></div>
          </div>

          <v-card-actions>
            <!--<v-btn flat color="red" v-on:click="toggleDetailsModal(snippet.id)">Details</v-btn>-->
            <v-btn flat color="red" v-on:click="togglePutModal(snippet.id)">Detail / Update</v-btn>
            <v-btn flat color="gray" v-on:click="toggleDeleteModal(snippet.id)">Delete</v-btn>
            <v-spacer></v-spacer>
            <!--<v-btn flat color="red" v-on:click="goTop">Go Top</v-btn>-->

          </v-card-actions>
        </v-card>
        </draggable>

      </v-flex>
    </v-layout>

    <!-- 詳細 ダイアログ -->
    <v-dialog v-model="dialogdetailFlag" width="800" persistent>
      <v-card>
        <v-card-title class="headline red lighten-3 white--text" primary-title>
          Detail Form
        </v-card-title>
        <v-text-field v-model="detailTitle" label="Snippet Title" required style='margin:20px; margin-top:30px'></v-text-field>
        <v-flex d-flex>
          <v-text-field v-model="detailLanguage" label="Language" required style='margin:20px; margin-bottom:0px; margin-left:20px'></v-text-field>
          <v-select v-model='detailLanguage' :items="languagesForEdit" label="Select from history" style='margin:20px; margin-bottom:0px;margin-left: 0px'></v-select>
        </v-flex>
        </v-flex>
        <v-card-text>
          <p>Snippet</p>
          <div style='width:100%;'>
            <textarea style='width:100%; height:300px; background-color:#efefef; padding:3px' v-model='detailContents'></textarea>
          </div>
        </v-card-text>
        <v-divider></v-divider>

        <v-card-actions>
          <v-btn color="#grey lighten-4" flat v-on:click="toggleDetailsModal">
            Cancel
          </v-btn>
          <v-spacer></v-spacer>
          <v-btn color="red" flat v-on:click="togglePutModal(snippet.id)">
            更新
          </v-btn>
        </v-card-actions>
      </v-card>
    </v-dialog>

    <!-- 作成 ダイアログ -->
    <v-dialog v-model="dialogPostFlag" width="800" persistent>
      <v-card>
        <v-card-title class="headline red lighten-3 white--text" primary-title>
          Create Form
        </v-card-title>
        <v-text-field v-model="postTitle" label="Snippet Title" required style='margin:20px; margin-top:30px'></v-text-field>
        <v-flex d-flex>
          <v-text-field v-model="postLanguage" label="Language" required style='margin:20px; margin-bottom:0px; margin-left:20px'></v-text-field>
          <v-select v-model='postLanguage' :items="languagesForEdit" label="Select from history" style='margin:20px; margin-bottom:0px;margin-left: 0px'></v-select>
        </v-flex>
        </v-flex>
        <v-card-text>
          <p>Snippet</p>
          <div style='width:100%;'>
            <textarea style='width:100%; height:300px; background-color:#efefef; padding:3px' v-model='postContents'></textarea>
          </div>
        </v-card-text>
        <v-divider></v-divider>

        <v-card-actions>
          <v-btn color="#grey lighten-4" flat v-on:click="togglePostModal">
            Cancel
          </v-btn>
          <v-spacer></v-spacer>
          <v-btn color="red" flat v-on:click="postSnippet">
            Add Snippet
          </v-btn>
        </v-card-actions>
      </v-card>
    </v-dialog>

    <!-- 更新 ダイアログ -->
    <v-dialog v-model="dialogPutFlag" width="800" persistent>
      <v-card>
        <v-card-title class="headline red lighten-3 white--text" primary-title>
          Edit Form
        </v-card-title>

        <v-text-field v-model="putTitle" label="Snippet Title" required style='margin:20px; margin-top:30px'></v-text-field>
        <v-flex d-flex>
          <v-text-field v-model="putLanguage" label="Language" required style='margin:20px; margin-bottom:0px; margin-left:20px'></v-text-field>
        </v-flex>
        <v-card-text>
          <p>Snippet</p>
          <div style='width:100%;'>
            <textarea style='width:100%; height:300px; background-color:#efefef; padding:3px' v-model='putContents'></textarea>
          </div>
        </v-card-text>

        <v-divider></v-divider>

        <v-card-actions>
          <v-btn color="#grey lighten-4" flat v-on:click="togglePutModal">
            Cancel
          </v-btn>
          <v-spacer></v-spacer>
          <v-btn color="red" flat v-on:click="putSnippet">
            Update Snippet
          </v-btn>
        </v-card-actions>
      </v-card>
    </v-dialog>

    <!-- 削除 ダイアログ -->
    <v-dialog v-model="dialogDeleteFlag" width="400">
      <v-card>
        <v-card-title class="headline red lighten-3 white--text" primary-title>
          Confirm
        </v-card-title>
        <v-spacer></v-spacer>
        <v-card-text>
          <p>本当に削除してもよろしいですか？</p>
        </v-card-text>

        <v-divider></v-divider>

        <v-card-actions>
          <v-spacer></v-spacer>
          <v-btn color="red" flat v-on:click="deleteSnippet()">
            Delete
          </v-btn>
        </v-card-actions>
      </v-card>
    </v-dialog>
  </v-container>
</v-app>
<script>

    new Vue({
        el: '#app',
        data () {
            return {
                snippetList: ['',''],
                allData: ['',''],
                languages: ['All'],
                languagesForEdit: [],
                language: 'ALL',

                //作成
                dialogPostFlag: false,
                postTitle: '',
                postLanguage: '',
                postContents: '',

                //詳細
                dialogdetailFlag: false,
                detailTitle: '',
                detailLanguage: '',
                detailContents: '',

                //更新
                dialogPutFlag: false,
                putTitle: '',
                putLanguage: '',
                putContents: '',

                //削除
                dialogDeleteFlag: false,
                searchWord: ''

            }
        },
        mounted () {
            this.listSnippet();
            options = { headerLevelStart: 3, omitExtraWLInCodeBlocks: true, tables: true, simpleLineBreaks: true, simplifiedAutoLink: true }
            this.showdown = new showdown.Converter(options)
        },
        methods: {
            listSnippet: function() {

                //一覧取得
                axios.get('/snippets.json')
                    .then(response => {
                            this.allData = response.data
                            this.snippetList = this.allData
                            this.listLanguages();
                            this.abstruct();
                        }
                    );
            },
            listLanguages: function() {
                this.languages = []
                this.languagesForEdit = []
                this.languages.push('ALL')
                for (i=0;i<this.allData.length;i++) {
                    if (this.languages.indexOf(this.allData[i].language) == -1) {
                        this.languages.push(this.allData[i].language)
                        this.languagesForEdit.push(this.allData[i].language)
                    }
                }
            },

            togglePostModal: function() {
                this.dialogPostFlag = !this.dialogPostFlag
            },

            //詳細処理
            toggleDetailsModal: function(id) {
                axios.get('/snippets/' + id + '.json')
                    .then(response => {
                            this.detailTitle = response.data.title
                            this.detailLanguage = response.data.language
                            this.detailContents = response.data.contents
                        }
                    );

                this.id = id
                this.dialogdetailFlag = !this.dialogdetailFlag
            },

            //更新処理
            togglePutModal: function(id) {
                axios.get('/snippets/' + id + '.json')
                    .then(response => {
                            this.putTitle = response.data.title
                            this.putLanguage = response.data.language
                            this.putContents = response.data.contents
                        }
                    );

                this.id = id
                this.dialogPutFlag = !this.dialogPutFlag
            },

            //削除処理
            deleteSnippet: function() {
                axios.delete('/snippets/' + this.id + '.json')
                    .then(response => {
                            this.listSnippet();
                        }
                    );
                this.dialogDeleteFlag = !this.dialogDeleteFlag
            },
            toggleDeleteModal: function(id) {
                this.id = id
                this.dialogDeleteFlag = !this.dialogDeleteFlag
            },
            goElem: function(id) {
                document.getElementById(id).scrollIntoView(true)
            },
            goTop: function() {
                document.getElementById("app").scrollIntoView(true)
            },
            abstruct: function() {
                if (this.language == 'ALL') {
                    this.snippetList = []
                    for (i=0;i<this.allData.length;i++) {
                        if ((this.allData[i].contents.indexOf(this.searchWord) !== -1) || (this.allData[i].title.indexOf(this.searchWord) !== -1) || (this.allData[i].language.indexOf(this.searchWord) !== -1)) { // 説明 4.7
                            this.snippetList.push(this.allData[i])
                        }
                    }
                } else if (this.language != '') {
                    this.snippetList = []
                    for (i=0;i<this.allData.length;i++) {
                        if (this.allData[i].language == this.language) {
                            if ((this.allData[i].contents.indexOf(this.searchWord) !== -1) || (this.allData[i].title.indexOf(this.searchWord) !== -1) || (this.allData[i].language.indexOf(this.searchWord) !== -1)) { // 説明 4.7
                                this.snippetList.push(this.allData[i])
                            }
                        }
                    }
                }
            },
            putSnippet: function() {
                axios.put('/snippets/' + this.id + '.json', {title:this.putTitle, language:this.putLanguage, contents:this.putContents})
                    .then(response => {
                            this.listSnippet();
                        }
                    );
                this.dialogPutFlag = !this.dialogPutFlag
            },
            postSnippet: function() {
                axios.post('/snippets.json', {title:this.postTitle, language:this.postLanguage, contents:this.postContents})
                    .then(response => {
                            this.listSnippet();
                            this.postTitle = ''
                            this.postLanguage = ''
                            this.postContents = ''
                        }
                    );

                this.dialogPostFlag = !this.dialogPostFlag
            },

        }
    })

</script>
</body>
</html>



<!--<p id="notice"><%#= notice %></p>-->

<!--<h1>Snippets</h1>-->

<!--<table>-->
<!--  <thead>-->
<!--    <tr>-->
<!--      <th>Title</th>-->
<!--      <th>Language</th>-->
<!--      <th>Contents</th>-->
<!--      <th colspan="3"></th>-->
<!--    </tr>-->
<!--  </thead>-->

<!--  <tbody>-->
    <%# @snippets.each do |snippet| %>
<!--      <tr>-->
<!--        <td><%#= snippet.title %></td>-->
<!--        <td><%#= snippet.language %></td>-->
<!--        <td><%#= snippet.contents %></td>-->
<!--        <td><%#= link_to 'Show', snippet %></td>-->
<!--        <td><%#= link_to 'Edit', edit_snippet_path(snippet) %></td>-->
<!--        <td><%#= link_to 'Destroy', snippet, method: :delete, data: { confirm: 'Are you sure?' } %></td>-->
<!--      </tr>-->
    <%# end %>
<!--  </tbody>-->
<!--</table>-->

<!--<br>-->

<%#= link_to 'New Snippet', new_snippet_path %>
